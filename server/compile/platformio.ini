[platformio]
src_dir = tasmota
build_dir = .pioenvs
build_cache_dir = .cache
default_envs = custom
extra_configs = tc_cores.ini

[user_defined]
board_memory = replace
board = replace
f_cpu = replace
build_flags = replace

[core_active]
platform                  = ${core_2_7_4.platform}
platform_packages         = ${core_2_7_4.platform_packages}
build_flags               = ${core_2_7_4.build_flags}
build_unflags             = ${core_2_7_4.build_unflags}

[common]
framework                 = arduino
board                     = ${user_defined.board}
board_build.flash_mode    = dout
platform                  = ${core_active.platform}
platform_packages         = ${core_active.platform_packages}
board_build.ldscript      = ${user_defined.board_memory}
build_flags               = ${core_active.build_flags} ${user_defined.build_flags}
build_unflags             = ${core_active.build_unflags}
board_build.f_cpu         = ${user_defined.f_cpu}
board_build.f_flash       = 40000000L
upload_resetmethod        = nodemcu
extra_scripts             = ${scripts_defaults.extra_scripts}

[common32]
framework               = arduino
board                   = ${user_defined.board}
board_build.flash_mode  = dout
platform                = ${core_active.platform}
platform_packages       = ${core_active.platform_packages}
board_build.ldscript    = esp32_out.ld
board_build.partitions  = esp32_partition_app1984k_spiffs64k.csv
board_build.f_flash     = 40000000L
board_build.f_cpu       = ${user_defined.f_cpu}
build_unflags           = ${core_active.build_unflags}
upload_resetmethod      = nodemcu
build_flags             = ${core_active.build_flags} ${user_defined.build_flags}
lib_extra_dirs          = libesp32
lib_ignore              = cc1101
extra_scripts           = ${scripts_defaults.extra_scripts}

[scripts_defaults]
extra_scripts           = pio/strip-floats.py, pio/name-firmware.py, pio/gzip-firmware.py, pio/override_copy.py

[env:custom]
platform                  = ${common.platform}
platform_packages         = ${common.platform_packages}
framework                 = ${common.framework}
board                     = ${common.board}
board_build.ldscript      = ${common.board_build.ldscript}
board_build.flash_mode    = ${common.board_build.flash_mode}
board_build.f_flash       = ${common.board_build.f_flash}
board_build.f_cpu         = ${common.board_build.f_cpu}
build_flags               = ${common.build_flags}
build_unflags             = ${common.build_unflags}
upload_resetmethod        = ${common.upload_resetmethod}
extra_scripts             = ${common.extra_scripts}

[env:custom32]
platform                  = ${common32.platform}
platform_packages         = ${common32.platform_packages}
framework                 = ${common32.framework}
board                     = ${common32.board}
board_build.ldscript      = ${common32.board_build.ldscript}
board_build.partitions    = ${common32.board_build.partitions}
board_build.flash_mode    = ${common32.board_build.flash_mode}
board_build.f_flash       = ${common32.board_build.f_flash}
board_build.f_cpu         = ${common32.board_build.f_cpu}
build_flags               = ${common32.build_flags}
build_unflags             = ${common32.build_unflags}
upload_resetmethod        = ${common32.upload_resetmethod}
lib_extra_dirs            = ${common32.lib_extra_dirs}
lib_ignore                = ${common32.lib_ignore}
extra_scripts             = ${common32.extra_scripts}